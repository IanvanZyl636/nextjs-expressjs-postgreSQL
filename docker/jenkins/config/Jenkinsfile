pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Install Dependencies'){
      steps{
        script {
          sh 'npm i'
        }
      }
    }

    stage('DB setup') {
      environment {
        DATABASE_URL = "${TEST_DB_CONN_STRING}"
      }
      steps {
        script {
            sh 'npm run prisma:deploy'
        }
        script {
            sh 'npm run prisma:reset:force'
        }
      }
    }

    stage('Lint') {
      steps {
        script {
            sh 'npm run lint'
        }
      }
    }

    stage('Build') {
      steps {
        script {
            sh 'npm run build'
        }
      }
    }

    stage('Test') {
      environment {
        DATABASE_URL = "${TEST_DB_CONN_STRING}"
      }
      steps {
        script {
            sh 'npm run test'
        }
      }
    }

    stage('Deploy') {
      environment {
        DATABASE_URL = "${DB_CONN_STRING}"
        BACKEND_DOMAIN= 'http://backend:3333'
        CLOUD_FLARE_TUNNEL_TOKEN = credentials('cloud-flare-tunnel-token')
      }
      steps {
        script {
          sh 'npm run prisma:deploy'
        }
        script {
          sh 'npm run docker:backend:start'
        }
        script {
          sh 'npm run docker:frontend:start'
        }
        script {
          if (env.CLOUD_FLARE_TUNNEL_TOKEN?.trim()) {
            sh 'npm run docker:cloudflare:start'
          } else {
            echo 'Skipping Cloudflare tunnel start: no token provided.'
          }
        }
      }
    }
  }

  post {
    always {
      cleanWs()
    }
    failure {
      echo 'Build failed!'
    }
    success {
      echo 'All images built and pushed successfully.'
    }
  }
}